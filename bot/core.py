import os
import django
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django –î–û –≤—Å–µ–≥–æ
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.conf import settings
from bot.handlers.start import router as start_router
from bot.handlers.tasks import router as tasks_router
from bot.handlers.help import router as help_router
from bot.handlers.games import router as games_router
from bot.handlers.music import router as music_router  # ‚Üê –î–û–ë–ê–í–¨
from bot.handlers.weather import router as weather_router  # ‚Üê –î–û–ë–ê–í–¨
from bot.handlers.currency import router as currency_router  # ‚Üê –î–û–ë–ê–í–¨
from bot.handlers.menu import router as menu_router
from bot.handlers.ai_chat import router as ai_chat_router


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    token = settings.TELEGRAM_BOT_TOKEN
    if not token:
        print("‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    bot = Bot(
        token=token,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )
    dp = Dispatcher()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    dp.include_router(start_router)
    dp.include_router(tasks_router)
    dp.include_router(help_router)
    dp.include_router(games_router)
    dp.include_router(music_router)  # ‚Üê –î–û–ë–ê–í–¨
    dp.include_router(weather_router)  # ‚Üê –î–û–ë–ê–í–¨
    dp.include_router(currency_router)  # ‚Üê –î–û–ë–ê–í–¨
    dp.include_router(menu_router)
    dp.include_router(ai_chat_router)
    
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    
    try:
        await dp.start_polling(bot)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == '__main__':
    asyncio.run(main())