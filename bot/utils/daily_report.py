import asyncio
from asgiref.sync import sync_to_async
from django.utils import timezone
from tasks.models import Task
from users.models import User

async def send_daily_reports(bot):  
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    users = await sync_to_async(list)(User.objects.filter(telegram_chat_id__isnull=False))
    
    for user in users:
        try:
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            tasks_today = await sync_to_async(list)(
                Task.objects.filter(assigned_to=user, due_date__date=timezone.now().date())
            )
            completed_tasks = await sync_to_async(list)(
                Task.objects.filter(assigned_to=user, status='completed', 
                                  updated_at__date=timezone.now().date())
            )
            
            report = (
                "üìä <b>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç</b>\n\n"
                f"üìÖ –ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {len(tasks_today)}\n"
                f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {len(completed_tasks)}\n"
                f"üéØ –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: –æ—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üí™"
            )
            
            await bot.send_message(user.telegram_chat_id, report, parse_mode='HTML')
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}: {e}")

async def start_daily_scheduler(bot):  
    """–ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ 9:00"""
    while True:
        now = timezone.now()
        target_time = now.replace(hour=9, minute=0, second=0, microsecond=0)
        
        if now > target_time:
            target_time = target_time.replace(day=target_time.day + 1)
        
        wait_seconds = (target_time - now).total_seconds()
        await asyncio.sleep(wait_seconds)
        
        await send_daily_reports(bot)  